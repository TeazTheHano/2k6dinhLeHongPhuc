import React from "react";
import Svg, { SvgUri, SvgXml } from 'react-native-svg';

export const searchIcon = (w, h, color) => {
    const xml = `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clip-path="url(#clip0_367_83)">
    <path d="M18.031 16.617L22.314 20.899L20.899 22.314L16.617 18.031C15.0237 19.3082 13.042 20.0029 11 20C6.032 20 2 15.968 2 11C2 6.032 6.032 2 11 2C15.968 2 20 6.032 20 11C20.0029 13.042 19.3082 15.0237 18.031 16.617ZM16.025 15.875C17.2941 14.5699 18.0029 12.8204 18 11C18 7.132 14.867 4 11 4C7.132 4 4 7.132 4 11C4 14.867 7.132 18 11 18C12.8204 18.0029 14.5699 17.2941 15.875 16.025L16.025 15.875Z" fill=${color}/>
    </g>
    <defs>
    <clipPath id="clip0_367_83">
    <rect width="24" height="24" fill="white"/>
    </clipPath>
    </defs>
    </svg>
    `
    return (
        <SvgXml xml={xml} width={w} height={h} />
    );
}

export const leftArrow = (w = '100%', h = '100%', color) => {
    const xml = `<svg width="100%" height="100%" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clip-path="url(#clip0_118_911)">
    <path d="M9.785 16.25L16.49 22.955L14.7225 24.7225L5 15L14.7225 5.27747L16.49 7.04497L9.785 13.75L25 13.75L25 16.25L9.785 16.25Z" fill=${color}/>
    </g>
    <defs>
    <clipPath id="clip0_118_911">
    <rect width="30" height="30" fill="white" transform="translate(30 30) rotate(-180)"/>
    </clipPath>
    </defs>
    </svg>
    `
    return (
        <SvgXml xml={xml} width={w} height={h} />
    );
}

export const shareIcon = (w = '100%', h = '100%', color) => {
    const xml = `
    <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clip-path="url(#clip0_62_4141)">
    <path d="M16.4 21.2788L11.1513 18.4162C10.466 19.1488 9.57624 19.6584 8.5976 19.8786C7.61896 20.0989 6.5967 20.0197 5.66366 19.6513C4.73063 19.2829 3.92996 18.6424 3.36572 17.8131C2.80148 16.9837 2.49976 16.0037 2.49976 15.0006C2.49976 13.9975 2.80148 13.0176 3.36572 12.1882C3.92996 11.3588 4.73063 10.7183 5.66366 10.35C6.5967 9.98159 7.61896 9.90239 8.5976 10.1226C9.57624 10.3429 10.466 10.8524 11.1513 11.585L16.4013 8.7225C16.1032 7.54259 16.2457 6.29449 16.8021 5.21213C17.3584 4.12977 18.2904 3.28748 19.4233 2.84313C20.5563 2.39878 21.8124 2.38288 22.9562 2.79842C24.1001 3.21395 25.0531 4.0324 25.6366 5.10033C26.2202 6.16826 26.3942 7.41236 26.1261 8.59943C25.858 9.7865 25.1662 10.835 24.1803 11.5485C23.1944 12.262 21.9822 12.5914 20.7708 12.475C19.5594 12.3586 18.432 11.8044 17.6 10.9162L12.35 13.7787C12.5515 14.5804 12.5515 15.4196 12.35 16.2212L17.5988 19.0837C18.4308 18.1956 19.5581 17.6414 20.7695 17.525C21.9809 17.4086 23.1932 17.738 24.1791 18.4515C25.1649 19.165 25.8568 20.2135 26.1249 21.4006C26.393 22.5876 26.219 23.8317 25.6354 24.8997C25.0518 25.9676 24.0988 26.786 22.955 27.2016C21.8112 27.6171 20.555 27.6012 19.4221 27.1569C18.2891 26.7125 17.3572 25.8702 16.8008 24.7879C16.2445 23.7055 16.102 22.4574 16.4 21.2775V21.2788ZM7.50001 17.5C8.16305 17.5 8.79894 17.2366 9.26778 16.7678C9.73662 16.2989 10 15.663 10 15C10 14.337 9.73662 13.7011 9.26778 13.2322C8.79894 12.7634 8.16305 12.5 7.50001 12.5C6.83697 12.5 6.20109 12.7634 5.73225 13.2322C5.26341 13.7011 5.00001 14.337 5.00001 15C5.00001 15.663 5.26341 16.2989 5.73225 16.7678C6.20109 17.2366 6.83697 17.5 7.50001 17.5ZM21.25 10C21.9131 10 22.5489 9.73661 23.0178 9.26777C23.4866 8.79893 23.75 8.16304 23.75 7.5C23.75 6.83696 23.4866 6.20107 23.0178 5.73223C22.5489 5.26339 21.9131 5 21.25 5C20.587 5 19.9511 5.26339 19.4822 5.73223C19.0134 6.20107 18.75 6.83696 18.75 7.5C18.75 8.16304 19.0134 8.79893 19.4822 9.26777C19.9511 9.73661 20.587 10 21.25 10ZM21.25 25C21.9131 25 22.5489 24.7366 23.0178 24.2678C23.4866 23.7989 23.75 23.163 23.75 22.5C23.75 21.837 23.4866 21.2011 23.0178 20.7322C22.5489 20.2634 21.9131 20 21.25 20C20.587 20 19.9511 20.2634 19.4822 20.7322C19.0134 21.2011 18.75 21.837 18.75 22.5C18.75 23.163 19.0134 23.7989 19.4822 24.2678C19.9511 24.7366 20.587 25 21.25 25Z" fill=${color}/>
    </g>
    <defs>
    <clipPath id="clip0_62_4141">
    <rect width="30" height="30" fill="white"/>
    </clipPath>
    </defs>
    </svg>
    `
    return (
        <SvgXml xml={xml} width={w} height={h} />
    );
}

export const logoIcon = (w, h) => {
    const xml = `<svg width="40" height="45" viewBox="0 0 40 45" fill="none" xmlns="http://www.w3.org/2000/svg">
    <rect width="40" height="40" rx="8" fill="url(#paint0_linear_283_78)"/>
    <g filter="url(#filter0_d_283_78)">
    <path d="M8.12436 10.9704L7.26288 10.5525C7.26288 10.5525 7.30158 10.314 7.37782 10.314C7.45407 10.314 8.48056 10.5124 8.48056 10.5124C8.48056 10.5124 9.38643 10.4923 9.67321 10.314C9.95999 10.1346 11.1663 10.1346 11.9117 10.0756C12.6582 10.0154 15.3178 9.85717 15.7776 9.79696C16.2373 9.73675 17.1933 9.51834 17.1933 9.51834C17.1933 9.51834 17.5187 8.7427 18.0547 8.7427C18.5907 8.7427 19.6628 8.72263 19.6628 8.72263C19.6628 8.72263 20.0645 8.56325 20.2181 8.34485C20.3717 8.12644 20.3137 7.39094 20.3137 7.39094C20.3137 7.39094 20.0838 6.75461 20.2375 6.17849C20.3911 5.60237 20.6779 5.30368 20.6779 5.30368C20.6779 5.30368 20.3911 5.04514 20.4673 4.88576C20.5436 4.72638 21.7874 4.40881 21.7874 4.40881C21.7874 4.40881 22.1892 3.63317 22.2472 3.59421C22.3041 3.55407 24.4402 2.88232 24.6006 3.01809C24.6473 3.05823 26.6104 4.50916 26.6104 4.50916C26.6104 4.50916 27.2033 5.26472 27.2613 5.5032C27.3182 5.74168 27.1077 6.27884 27.0701 6.57634C27.0315 6.87503 26.9359 7.15247 26.6878 7.39094C26.4385 7.62942 25.6351 8.34485 25.3096 8.54437C24.9841 8.7427 24.6018 9.16062 24.6018 9.16062C24.6018 9.16062 25.4724 10.4722 25.9367 10.5124C26.401 10.5525 27.2613 10.5726 27.3956 11.2077C27.5299 11.8441 27.2613 12.4202 27.8736 12.5194C28.4858 12.6185 28.8682 12.5394 28.9069 13.0565C28.9456 13.5736 29.5954 13.4745 29.2324 13.9715C28.8694 14.4685 27.9453 15.5416 26.9723 16.3574C25.9993 17.172 25.2527 17.0339 25.2527 17.0339C25.2527 17.0339 25.0991 17.4908 25.1571 17.5899C25.214 17.6891 25.8274 18.1271 26.0755 18.3455C26.3247 18.5639 28.1035 20.3926 28.3914 20.7315C28.6782 21.0691 29.9801 22.8589 29.9994 23.3358C30.0188 23.8128 29.559 24.7867 29.559 24.7867C29.559 24.7867 28.9467 25.5222 28.9274 25.5824C28.908 25.6427 29.2904 26.1196 29.023 26.2979C28.7556 26.4773 29.4441 26.815 29.0036 26.9932C28.5632 27.1727 28.7544 27.7488 28.372 27.9271C27.9897 28.1065 27.8167 28.2446 27.7985 28.3048C27.7791 28.3651 26.6889 31.4062 26.6889 31.4062C26.6889 31.4062 27.0519 31.9032 26.8994 32.1217C26.7458 32.3401 26.8038 33.7119 26.5364 33.9704C26.269 34.229 26.0766 34.9444 26.154 35.3623C26.2314 35.7803 26.4033 36.4154 26.2109 36.7542C26.0197 37.0919 25.3495 37.0718 25.1583 36.7542C24.9671 36.4367 24.3161 35.8594 24.1818 35.0849C24.0476 34.3093 23.8951 33.7733 23.7995 33.4746C23.7039 33.1759 23.7039 32.9374 23.7995 32.8784C23.8951 32.8182 24.7759 32.163 24.7759 32.163C24.7759 32.163 24.8328 31.4676 25.2539 31.0698C25.3301 30.0556 25.3495 29.5386 25.3495 29.5386C25.3495 29.5386 24.6985 29.9565 24.6029 30.1548C24.5073 30.3531 24.3924 31.0497 24.2205 31.3873C24.0487 31.725 23.8666 32.2421 23.7278 32.3814C23.5889 32.5207 23.2259 32.4605 23.0529 32.0827C22.8811 31.7049 22.5932 31.1489 22.5363 30.4925C22.4794 29.8361 22.4407 29.1006 22.3826 28.7428C22.3257 28.3851 22.4589 27.7889 22.5738 27.7087C22.6888 27.6296 23.6265 27.6685 23.6265 27.6685C23.6265 27.6685 24.5449 26.5352 24.7748 26.4159C25.0046 26.2967 25.4064 25.6604 25.4633 25.6013C25.5202 25.5411 25.6544 25.3026 25.6544 25.3026L25.6931 24.7466C25.6931 24.7466 24.8703 23.7325 24.4299 23.2957C23.9895 22.8589 22.6888 22.3217 22.287 21.6263C21.8853 20.931 21.6941 19.3998 21.7704 19.2805C21.8466 19.1613 21.9422 18.6241 21.9422 18.6241C21.9422 18.6241 21.6361 18.5639 21.3687 18.545C21.1012 18.525 20.5459 17.1732 20.374 16.8356C20.2022 16.4979 20.2204 15.6432 19.7618 15.3043C19.302 14.9667 18.6715 14.668 18.6522 13.7542C18.6329 12.8393 18.4804 12.2431 18.2118 12.1439C17.9443 12.0448 17.7714 12.0247 17.4846 12.0046C17.1978 11.9846 15.6672 12.1239 15.5135 11.9846C15.3599 11.8453 15.3223 12.2832 14.825 12.0837C14.3277 11.8854 12.491 11.4675 12.491 11.4675L10.9979 11.2089C10.9979 11.2089 10.5961 11.4273 10.3663 11.4273C10.1364 11.4273 9.69597 11.7449 9.69597 11.7449L9.42057 12.2998C9.42057 12.2998 9.589 12.661 9.56282 12.7189C9.48658 12.8842 9.218 12.8181 9.10306 12.6587C8.98812 12.4993 8.89253 12.2018 8.89253 12.2018V11.9633C8.89253 11.9633 7.40172 12.3045 7.30385 12.249C7.1616 12.1687 7.24695 11.9834 7.24695 11.9834L7.8979 11.785L7.84327 11.5418C7.84327 11.5418 7.16615 11.7331 7.09446 11.6859C7 11.6221 7 11.4309 7 11.4309L8.12778 10.9693L8.12436 10.9704ZM23.2043 4.82791C23.3955 4.92708 23.2612 5.26472 23.4148 5.44417C23.5684 5.62362 23.6823 6.43822 23.7016 6.57753C23.7209 6.71683 23.5298 7.21386 23.5298 7.21386L23.8165 7.3933C23.8165 7.3933 24.1614 7.09462 24.62 6.67787C25.0797 6.25995 25.519 5.60473 25.519 5.60473L24.7349 4.39228L24.4094 4.17387H23.9497C23.9497 4.17387 23.7198 4.23408 23.6436 4.35332C23.5673 4.47256 23.3761 4.57173 23.3761 4.57173L23.2612 4.29311L22.7639 4.5918C22.7639 4.5918 23.0131 4.7311 23.2043 4.83027V4.82791Z" fill="#FCFCFC"/>
    </g>
    <defs>
    <filter id="filter0_d_283_78" x="0" y="3" width="31" height="42" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
    <feFlood flood-opacity="0" result="BackgroundImageFix"/>
    <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
    <feOffset dx="-3" dy="4"/>
    <feGaussianBlur stdDeviation="2"/>
    <feComposite in2="hardAlpha" operator="out"/>
    <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
    <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_283_78"/>
    <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_283_78" result="shape"/>
    </filter>
    <linearGradient id="paint0_linear_283_78" x1="2.4" y1="-1.32075" x2="35.5763" y2="40.9585" gradientUnits="userSpaceOnUse">
    <stop offset="0.03125" stop-color="#F52935"/>
    <stop offset="0.291667" stop-color="#FF9BE3"/>
    <stop offset="0.536458" stop-color="#F93199"/>
    <stop offset="0.744792" stop-color="#FFA7CC"/>
    <stop offset="1" stop-color="#FB28E6"/>
    </linearGradient>
    </defs>
    </svg>
    `

    return (
        <SvgXml xml={xml} width={w} height={h} />
    );
}